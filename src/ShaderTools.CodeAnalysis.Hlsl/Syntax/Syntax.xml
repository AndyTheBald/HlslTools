<?xml version="1.0" encoding="utf-8" ?>
<Tree Namespace="ShaderTools.CodeAnalysis.Hlsl.Syntax" LanguageName="Hlsl" Root="SyntaxNodeBase" >
  <PredefinedNode Name="SyntaxNode" Base="SyntaxNodeBase"/>
  <PredefinedNode Name="SyntaxToken" Base="SyntaxNode"/>

  <AbstractNode Name="BaseMatrixTypeSyntax" Base="NumericTypeSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="BaseVectorTypeSyntax" Base="NumericTypeSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="BranchingDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="BranchTaken" Type="bool" Abstract="true" />
  </AbstractNode>
  <AbstractNode Name="ConditionalDirectiveTriviaSyntax" Base="BranchingDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="Condition" Type="ExpressionSyntax" Abstract="true" />
    <Field Name="ConditionValue" Type="bool" Abstract="true" />
  </AbstractNode>
  <AbstractNode Name="DeclarationNameSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="DefineDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="MacroName" Type="SyntaxToken" Abstract="true" />
    <Field Name="MacroBody" Type="List&lt;SyntaxToken&gt;" Abstract="true" />
  </AbstractNode>
  <AbstractNode Name="DirectiveTriviaSyntax" Base="StructuredTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="HashToken" Type="SyntaxToken" Abstract="true" />
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Abstract="true" />
    <Field Name="IsActive" Type="bool" Abstract="true" />
  </AbstractNode>
  <AbstractNode Name="ExpressionSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="NameSyntax" Base="TypeSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="NumericTypeSyntax" Base="PredefinedTypeSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="PredefinedTypeSyntax" Base="TypeSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="StatementSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="Attributes" Type="List&lt;AttributeSyntax&gt;" />
  </AbstractNode>
  <AbstractNode Name="StructuredTriviaSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="SwitchLabelSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="ColonToken" Type="SyntaxToken" Abstract="true" />
    <Field Name="Keyword" Type="SyntaxToken" Abstract="true" />
  </AbstractNode>
  <AbstractNode Name="TypeSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>
  <AbstractNode Name="VariableDeclaratorQualifierSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
  </AbstractNode>

  <Node Name="AnnotationsSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="Annotations"/>
    <Field Name="LessThanToken" Type="SyntaxToken">
      <PropertyComment>
        <summary>Gets the less than token.</summary>
      </PropertyComment>
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="Annotations" Type="List&lt;VariableDeclarationStatementSyntax&gt;">
      <PropertyComment>
        <summary>Gets the annotation list.</summary>
      </PropertyComment>
    </Field>
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <PropertyComment>
        <summary>Gets the greater than token.</summary>
      </PropertyComment>
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>

  <Node Name="ArgumentListSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ArgumentList"/>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>

  <Node Name="ArrayInitializerExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ArrayInitializerExpression"/>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="Elements" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>

  <Node Name="ArrayRankSpecifierSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ArrayRankSpecifier"/>
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="Dimension" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>

  <Node Name="AssignmentExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="Left" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="OperatorToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="LessThanToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="Right" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>

  <Node Name="AttributeArgumentListSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="AttributeArgumentList"/>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;LiteralExpressionSyntax&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>

  <Node Name="AttributeSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="Attribute"/>
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="Name" Type="IdentifierNameSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    <Kind Name="IdentifierName"/>
    </Field>
    <Field Name="ArgumentList" Type="AttributeArgumentListSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="AttributeArgumentList"/>
    </Field>
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>

  <Node Name="BaseListSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="BaseList"/>
    <Field Name="ColonToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="BaseType" Type="IdentifierNameSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="IdentifierNameSyntax"/>
    </Field>
  </Node>

  <Node Name="BinaryExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="Left" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="OperatorToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="Right" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="BlockSyntax" Base="StatementSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="Block"/>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="Statements" Type="List&lt;StatementSyntax&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>

  <Node Name="BreakStatementSyntax" Base="StatementSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="BreakStatement"/>
    <Field Name="BreakKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="BreakKeyword"/>
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>

  <Node Name="CaseSwitchLabelSyntax" Base="SwitchLabelSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="CaseSwitchLabel"/>
    <Field Name="CaseKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CaseKeyword"/>
      <Getter Name="Keyword" Override="true"/>
    </Field>
    <Field Name="Value" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ColonToken"/>
    </Field>
  </Node>

  <Node Name="CastExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="CastExpression"/>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="Type" Type="TypeSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ArrayRankSpecifiers" Type="List&lt;ArrayRankSpecifierSyntax&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="CompilationUnitSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="CompilationUnit"/>
    <Field Name="Declarations" Type="List&lt;SyntaxNode&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfFileToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfFileToken"/>
    </Field>
  </Node>

  <Node Name="CompileExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="CompileExpression"/>
    <Field Name="CompileKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CompileKeyword"/>
    </Field>
    <Field Name="ShaderTargetToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ShaderFunction" Type="FunctionInvocationExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="CompoundExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Field Name="Left" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CommaToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CommaToken"/>
    </Field>
    <Field Name="Right" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="ConditionalExpressionSyntax" Base="ExpressionSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ConditionalExpression"/>
    <Field Name="Condition" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="QuestionToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="QuestionToken"/>
    </Field>
    <Field Name="WhenTrue" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="WhenFalse" Type="ExpressionSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="ConstantBufferSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ConstantBufferDeclaration"/>
    <Field Name="ConstantBufferKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ConstantBufferKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="Register" Type="RegisterLocation">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="RegisterLocation"/>
    </Field>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="Declarations" Type="List&lt;VariableDeclarationStatementSyntax&gt;">
      <PropertyComment>
        <summary>Gets the annotation list.</summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseBraceToken"/>
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>

  <Node Name="ContinueStatementSyntax" Base="StatementSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ContinueStatement"/>
    <Field Name="ContinueKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ContinueKeyword"/>
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>

  <Node Name="DefaultSwitchLabelSyntax" Base="SwitchLabelSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="DefaultSwitchLabel"/>
    <Field Name="DefaultKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="DefaultKeyword"/>
      <Getter Name="Keyword" Override="true"/>
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ColonToken"/>
    </Field>
  </Node>



  <Node Name="IdentifierNameSyntax" Base="NameSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="IdentifierName"/>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="LogicalRegisterSpace" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="LogicalRegisterSpace"/>
    <Field Name="CommaToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CommaToken"/>
    </Field>
    <Field Name="SpaceToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="SpaceToken"/>
    </Field>
  </Node>

  <Node Name="RegisterLocation" Base="VariableDeclaratorQualifierSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="RegisterLocation"/>
    <Field Name="Colon" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="RegisterKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="RegisterKeyword"/>
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="Register" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="LogicalRegisterSpace" Type="LogicalRegisterSpace">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="LogicalRegisterSpace"/>
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>


  <Node Name="BadDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="BadDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="IfDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="IfDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="IfKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="IfKeyword"/>
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="BranchTaken" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ConditionValue" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="IfDefDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="IfDefDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="IfDefKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="IfDefKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="BranchTaken" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ConditionValue" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="IfNDefDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="IfNDefDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="IfNDefKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="IfNDefKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="BranchTaken" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ConditionValue" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="ElifDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ElifDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="ElifKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ElifKeyword"/>
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="BranchTaken" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="ConditionValue" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="ElseDirectiveTriviaSyntax" Base="BranchingDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ElseDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="ElseKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="ElseKeyword"/>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="BranchTaken" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="EndIfDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="EndIfDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="EndIfKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndIfKeyword"/>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="ObjectLikeDefineDirectiveTriviaSyntax" Base="DefineDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="ObjectLikeDefineDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="DefineKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="DefineKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Getter Name="MacroName" Override="true"/>
    </Field>
    <Field Name="Body" Type="List&lt;SyntaxToken&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Getter Name="MacroBody" Override="true"/>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="FunctionLikeDefineDirectiveTriviaSyntax" Base="DefineDirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="FunctionLikeDefineDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="DefineKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="DefineKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Getter Name="MacroName" Override="true"/>
    </Field>
    <Field Name="Parameters" Type="FunctionLikeDefineDirectiveParameterListSyntax">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="FunctionLikeDefineDirectiveParameterList"/>
    </Field>
    <Field Name="Body" Type="List&lt;SyntaxToken&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Getter Name="MacroBody" Override="true"/>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="FunctionLikeDefineDirectiveParameterListSyntax" Base="SyntaxNode">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="FunctionLikeDefineDirectiveParameterList"/>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;SyntaxToken&gt;">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>

  <Node Name="IncludeDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="IncludeDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="IncludeKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="IncludeKeyword"/>
    </Field>
    <Field Name="Filename" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="UndefDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="UndefDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="UndefKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="UndefKeyword"/>
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>

  <Node Name="LineDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <TypeComment>
      <summary></summary>
    </TypeComment>
    <Kind Name="LineDirectiveTrivia"/>
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="HashToken"/>
    </Field>
    <Field Name="LineKeyword" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="LineKeyword"/>
    </Field>
    <Field Name="Line" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="File" Type="SyntaxToken">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
      <Kind Name="EndOfDirectiveToken"/>
    </Field>
    <Field Name="IsActive" Type="bool" Override="true">
      <PropertyComment>
        <summary></summary>
      </PropertyComment>
    </Field>
  </Node>



</Tree>
